{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\gpgab\\\\Desktop\\\\next-project\\\\pages\\\\[meetupId].js\";\nimport Head from 'next/head';\nimport { MongoClient, ObjectId } from 'mongodb';\nimport MeetupDetail from '../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://gpgabika:Apqe0B1tezbGHfj1@cluster0.0n2z00u.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://gpgabika:Apqe0B1tezbGHfj1@cluster0.0n2z00u.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: new ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/gpgab/Desktop/next-project/pages/[meetupId].js"],"names":["Head","MongoClient","ObjectId","MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","id"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAAQC,WAAR,EAAoBC,QAApB,QAAmC,SAAnC;AAEA,OAAOC,YAAP,MAAyB,oCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AACzB,sBACI,QAAC,QAAD;AAAA,2BAEI,QAAC,YAAD;AACC,MAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KADzB;AAEF,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAFtB;AAGF,MAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAHxB;AAIF,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJ5B;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;AACD,OAAO,eAAeC,cAAf,GAA+B;AAClC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,0GAApB,CAArB;AACK,QAAMC,EAAE,GAAEF,MAAM,CAACE,EAAP,EAAV;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACC,QAAMC,OAAO,GAAG,MAAOF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA0B;AAACC,IAAAA,GAAG,EAAC;AAAL,GAA1B,EAAmCC,OAAnC,EAAvB;AACCR,EAAAA,MAAM,CAACS,KAAP;AACP,SAAM;AACFC,IAAAA,QAAQ,EAAC,KADP;AAEFC,IAAAA,KAAK,EAACN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAG;AACvBC,MAAAA,MAAM,EAAC;AACHC,QAAAA,QAAQ,EAACF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADN;AADgB,KAAH,CAAlB;AAFJ,GAAN;AAQH;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAsC;AACzC,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMf,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,0GAApB,CAArB;AACK,QAAMC,EAAE,GAAEF,MAAM,CAACE,EAAP,EAAV;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACE,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAC9Db,IAAAA,GAAG,EAAC,IAAIjB,QAAJ,CAAayB,QAAb;AAD0D,GAA1B,CAA7B;AAITf,EAAAA,MAAM,CAACS,KAAP;AACE,SAAM;AACFhB,IAAAA,KAAK,EAAC;AACFC,MAAAA,UAAU,EAAC;AACf2B,QAAAA,EAAE,EAAEF,cAAc,CAACZ,GAAf,CAAmBS,QAAnB,EADW;AAEfpB,QAAAA,KAAK,EAAEuB,cAAc,CAACvB,KAFP;AAGfC,QAAAA,OAAO,EAAEsB,cAAc,CAACtB,OAHT;AAIfF,QAAAA,KAAK,EAAEwB,cAAc,CAACxB,KAJP;AAKfG,QAAAA,WAAW,EAAEqB,cAAc,CAACrB;AALb;AADT;AADJ,GAAN;AAWH;AAED,eAAeN,aAAf","sourcesContent":["import Head from 'next/head'\r\nimport {MongoClient,ObjectId} from 'mongodb'\r\n\r\nimport MeetupDetail from '../components/meetups/MeetupDetail'\r\n\r\nfunction MeetupDetails(props){\r\n    return (\r\n        <Fragment>\r\n\r\n            <MeetupDetail\r\n             image={props.meetupData.image}\r\n          title={props.meetupData.title}\r\n          address={props.meetupData.address}\r\n          description={props.meetupData.description}/>\r\n        </Fragment>\r\n    )\r\n}\r\nexport async function getStaticPaths(){\r\n    const client = await MongoClient.connect('mongodb+srv://gpgabika:Apqe0B1tezbGHfj1@cluster0.0n2z00u.mongodb.net/meetups?retryWrites=true&w=majority')\r\n         const db =client.db()\r\n\r\n         const meetupsCollection = db.collection('meetups')\r\n          const meetups = await  meetupsCollection.find({},{_id:1}).toArray()\r\n           client.close();\r\n    return{\r\n        fallback:false,\r\n        paths:meetups.map(meetup=>({\r\n            params:{\r\n                meetupId:meetup._id.toString()\r\n            }\r\n        }))\r\n    }\r\n}\r\nexport async function getStaticProps(context){\r\n    const meetupId = context.params.meetupId;\r\n    const client = await MongoClient.connect('mongodb+srv://gpgabika:Apqe0B1tezbGHfj1@cluster0.0n2z00u.mongodb.net/meetups?retryWrites=true&w=majority')\r\n         const db =client.db()\r\n\r\n         const meetupsCollection = db.collection('meetups')\r\n           const selectedMeetup = await meetupsCollection.findOne({\r\n    _id:new ObjectId(meetupId),\r\n  });\r\n\r\n  client.close();\r\n    return{\r\n        props:{\r\n            meetupData:{\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.title,\r\n        address: selectedMeetup.address,\r\n        image: selectedMeetup.image,\r\n        description: selectedMeetup.description,\r\n      },\r\n        }\r\n    }\r\n}\r\n\r\nexport default MeetupDetails"]},"metadata":{},"sourceType":"module"}